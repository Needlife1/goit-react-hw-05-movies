{"version":3,"file":"static/js/473.7fdf0ee4.chunk.js","mappings":"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","sources":["Api/Api.js","Movie/Movie.js","Pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: `https://api.themoviedb.org/`,\n});\n","import { api } from 'Api/Api';\n\nconst KEY = 'api_key=8debd3241aced94fddceeaeecb834be8';\n\nconst getMovie = async arg => {\n  const data = api.get(`${arg}&${KEY}`);\n  return data;\n};\n\nexport { getMovie };\n","import { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport { getMovie } from '../Movie/Movie';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { moviesId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await getMovie(`3/movie/${moviesId}?`);\n        // console.log(data);\n        setMovie(data);\n      } catch (error) {\n        alert(' Movie not found');\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, [moviesId]);\n\n  return (\n    <>\n      <div>\n        <Link to={backLinkLocationRef.current}>Go back</Link>\n        {movie.poster_path !== null ? (\n          <img\n            loading=\"lazy\"\n            src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n            alt=\"\"\n            width={350}\n          />\n        ) : (\n          <p>Poster not found</p>\n        )}\n        <h2>\n          {movie.title}{' '}\n          {movie.release_date && `(${movie.release_date.slice(0, 4)})`}\n        </h2>\n        <p>User score: {movie.vote_average}</p>\n        <h3>Overview</h3>\n        <p>{movie.overview}</p>\n        <h3>Genres</h3>\n        {movie.genres &&\n          movie.genres.map(genre => <p key={genre.id}>{genre.name}</p>)}\n      </div>\n\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Rewiews</Link>\n          </li>\n        </ul>\n      </div>\n\n      <>\n        <Suspense fallback={<div>LOADING...</div>}>\n          <Outlet />\n        </Suspense>\n      </>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["api","axios","baseURL","getMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","arg","data","_context","prev","next","get","concat","abrupt","stop","_x","apply","arguments","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","moviesId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchData","_yield$getMovie","sent","t0","alert","console","error","_jsxs","_Fragment","children","_jsx","Link","to","current","poster_path","loading","src","alt","width","title","release_date","slice","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","Outlet"],"sourceRoot":""}