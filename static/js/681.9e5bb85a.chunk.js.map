{"version":3,"file":"static/js/681.9e5bb85a.chunk.js","mappings":"qMAEaA,E,OAAMC,EAAAA,OAAa,CAC9BC,QAAQ,gCCCJC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAG,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACc,OAAhCH,EAAOT,EAAIa,IAAI,GAADC,OAAIN,EAAG,KAAAM,OAHjB,6CAG2BJ,EAAAK,OAAA,SAC9BN,GAAI,wBAAAC,EAAAM,OAAA,GAAAT,EAAA,KACZ,gBAHaU,GAAA,OAAAb,EAAAc,MAAA,KAAAC,UAAA,I,yGCmCd,UAnCgB,WACd,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAClBI,GAAaC,EAAAA,EAAAA,MAAbD,SAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAzB,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAuB,EAAArB,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEST,EAAAA,EAAAA,GAAS,WAADW,OAAYY,EAAQ,cAAa,KAAD,EAAnD,OAAmDI,EAAApB,EAAAqB,KAAvDtB,EAAIqB,EAAJrB,KAAIC,EAAAK,OAAA,SAELU,EAAWhB,EAAKuB,UAAQ,OAAAtB,EAAAC,KAAA,EAAAD,EAAAuB,GAAAvB,EAAA,SAE/BwB,QAAQC,MAAKzB,EAAAuB,IAAQ,yBAAAvB,EAAAM,OAAA,GAAAT,EAAA,kBAExB,kBARc,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KASfU,GACF,GAAG,CAACH,KAGFU,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACsB,IAAnBd,EAAQe,QACPH,EAAAA,EAAAA,KAAA,KAAAE,SAAG,8CAEHF,EAAAA,EAAAA,KAAA,MAAAE,SACGd,EAAQgB,KAAI,SAAAC,GAAM,OACjBC,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKG,EAAOE,UACZP,EAAAA,EAAAA,KAAA,KAAAE,SAAIG,EAAOG,YAFJH,EAAOI,GAGX,OAMjB,C","sources":["Api/Api.js","Movie/Movie.js","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: `https://api.themoviedb.org/`,\n});\n","import { api } from 'Api/Api';\n\nconst KEY = 'api_key=8debd3241aced94fddceeaeecb834be8';\n\nconst getMovie = async arg => {\n  const data = api.get(`${arg}&${KEY}`);\n  return data;\n};\n\nexport { getMovie };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovie } from '../Movie/Movie';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await getMovie(`3/movie/${moviesId}/reviews?`);\n\n        return setReviews(data.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, [moviesId]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <p>We don`t have any reviews for this movie</p>\n      ) : (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["api","axios","baseURL","getMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","arg","data","_context","prev","next","get","concat","abrupt","stop","_x","apply","arguments","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","moviesId","useParams","useEffect","fetchData","_yield$getMovie","sent","results","t0","console","error","_jsx","_Fragment","children","length","map","review","_jsxs","author","content","id"],"sourceRoot":""}